id: test
namespace: ncaa_project

inputs:
- id: table
  type: SELECT
  displayName: Select which table to load to dataset on BigQuery
  values: [
          "team_colors"
          ]
  defaults: team_colors
  allowCustomValue: false

variables:
  #file: {{inputs.table}}_{{trigger.date | date('dd-MM-yyyy')}}.zip

  file: "{{inputs.table}}_24-03-2025.zip"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{inputs.table}}/{{render(vars.file)}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"
      taxi: "{{inputs.table}}"

  - id: if_team_colors
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.table == 'team_colors'}}"
    then:
      - id: bq_ncaa_team_colors_create_table
        serviceAccount: "{{kv('GCP_ACCOUNT')}}"
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          CREATE TABLE IF NOT EXISTS {{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.ncaa_team_colors_alt
            (
              market STRING OPTIONS (description = 'Market of the team'),
              id STRING OPTIONS (description = 'Unique ID for the team'),
              code_ncaa INTEGER OPTIONS (description = 'NCAA code for the team'),
              color STRING OPTIONS (description = 'Color of the team')
            )
      - id: log_gcs_file
        type: io.kestra.plugin.core.log.Log
        message: "Hodnota gcs_file: {{vars.gcs_file}}"

      - id: download_zip
        type: io.kestra.plugin.gcp.gcs.Download
        from: "{{vars.gcs_file}}"
        serviceAccount: "{{kv('GCP_ACCOUNT')}}"

      - id: unzip_files
        type: io.kestra.plugin.compress.ArchiveDecompress
        algorithm: ZIP
        from: "{{outputs.download_zip.uri}}"

      - id: iterate_through_unzip_outputs
        type: io.kestra.plugin.core.flow.ForEach
        values: "{{outputs.unzip_files.files.values()}}"
        concurrencyLimit: 1
        tasks:
          - id: load_to_bigquery
            type: io.kestra.plugin.gcp.bigquery.Load
            serviceAccount: "{{kv('GCP_ACCOUNT')}}"
            from: "{{taskrun.value}}"
            format: CSV
            csvOptions:
              fieldDelimiter: ","
              skipLeadingRows: 1
            destinationTable: "{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.ncaa_team_colors_alt"
            writeDisposition: WRITE_APPEND
            createDisposition: CREATE_NEVER


pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_ACCOUNT')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"

